## Generated by bash-project (https://github.com/curtis86/bash-project)

## TRAPS
trap force_exit INT KILL
force_exit() { msg "${t_bold}${t_yellow}WARNING:${t_normal}: trap caught. Exiting." ; exit ;}

## FORMATTING
t_bold=$( tput bold )
t_red=$( tput setaf 1 )
t_yellow=$( tput setaf 3 )
t_green=$( tput setaf 2 )
t_normal=$( tput sgr0 )

## SCRIPT FUNCTIONS

# abrt: prints abort message and exits script
# arg1: message
abrt() { echo -e "${t_bold}${t_red}FATAL:${t_normal} $@ - exiting." 1>&2 ; exit 1 ;}

# test_access: test if a file or directory is writeable - exit if not.
# arg1: file or directory to test write access
test_access() { test_target="$1" ; [ ! -w "${test_target}" ] && abrt "Unable to access ${t_yellow}${test_target}${t_normal}" ;}

# msg: prints a message to stdout
# arg1: message
msg() { echo "$@" ;}

# vmsg: prints a message to stderr
# arg1: message
vmsg() { echo "$@" >&2 ;}

# lmsg: logs message to file (please define ${log_file})
# arg1: message
lmsg() { 
  [ -z "${log_file}" ] && abrt "The log_file variable is not set"
  test_access "${log_file}"

  echo "$( date ) - $@" >> "${log_file}"
}

# Presents a yes/no prompt, returns 0 for yes, or 1 for anything else
# arg1: question string
yesno() {
  echo -n "$@ <y/n> "
  read ynanswer < /dev/tty
  ynanswer="$( echo "${ynanswer}" | head -c 1 | tr '[A-Z]' '[a-z]' )"
  [ "${ynanswer}" == "y" ] && return 0 || return 1 
}

# usage: prints script usage
usage() {
  echo
  progname="$( basename $0 ) <options>"
  echo "Usage: ${progname} <options>"
  echo
  echo "OPTIONS"
  echo " * No options have been defined"
}
